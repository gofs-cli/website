package start

import . "github.com/gofs-cli/website/internal/ui/components"

templ Start() {
	<div class="flex flex-col gap-y-2">
		<h1 class="mb-4 text-4xl font-extrabold">Start a Project</h1>
		<h2 class="mt-2 text-2xl font-extrabold">Initialize</h2>
		<p class="para">
			Provide gofs with a go module name such as
			<code>github.com/myorg/myapp</code>
		</p>
		<p class="para">
			Navigate to the folder where you want to initialize your project and run
		</p>
		@Cmdline("gofs init github.com/[your org]/[your app]")
		<p class="para">
			Or if you have not created the folder then provide a folder name and gofs will it
		</p>
		@Cmdline("gofs init github.com/[your org]/[your app] [your folder]")
		<h2 class="mt-2 text-2xl font-extrabold">Folder Structure</h2>
		<p class="para">
			Go is not opinionated about folder structure however by convention go
			code should be kept close to where it is used. In Gofs we
			use the default folder structure below.
		</p>
		<p class="para">
			NB: Gofs is not a framework so you can use or modify this as you see fit. 
		</p>
		@CodeBlock(NoClipboard, `root
|--.github              Github actions configuration
|--.gofs                Gofs configuration
|--.vscode              Vscode configuration
|--cmd                  Gofs command
|--docker               Docker folder including default Dockerfile
|--internal
|  |--app               Backend (see backend docs)
|  |--auth              Authentication functions
|  |--config            App config
|  |--db                Database functions
|  |--server            
|  |  |--assets         Static assets
|  |  |--handlers       Generic handlers, for example for assets
|  |  |--logging        Logging functions
|  |  |--telemetry      Telemetry functions
|  |  |--middleware.go  Server middleware
|  |  |--routes.go      Server routes
|  |  |--server.go      Server code
|  |--ui                Frontend (see frontend docs)
|--scripts              Build Scripts
`)
		<h2 class="mt-2 text-2xl font-extrabold">Dependencies</h2>
		<p class="para">
			Once you have initialized a project you can install all required dependencies with:
			@Cmdline("make deps")
			This will install air, templ, htmx and alpine.
		</p>
		<h2 class="mt-2 text-2xl font-extrabold">Start</h2>
		<p class="para">
			Run make to build and start the default app
		</p>
		@Cmdline("make")
	</div>
}
