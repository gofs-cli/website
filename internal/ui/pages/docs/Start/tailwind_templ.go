// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.819
package start

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import . "github.com/gofs-cli/website/internal/ui/components"

func Tailwind() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"flex flex-col gap-y-2\"><h1 class=\"mb-4 text-4xl font-extrabold\">Adding tailwind</h1><p class=\"para\">To setup Tailwind you will need to install tailwind, create a tailwind config,  add a stylesheet and update the build scripts and Dockerfile. Although not strictly necessary, we recommend using npm in the build toolchain. The instructions are in the Prerequisites section <a class=\"link\" href=\"/docs/prereqs/npm\">here</a></p><h2 class=\"mt-2 text-2xl font-extrabold\">Installing Tailwind</h2><p class=\"para\">The command below will install the latest tailwind and create a package.json file")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Cmdline("npm install tailwindcss").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</p><h2 class=\"mt-2 text-2xl font-extrabold\">tailwind.config.js</h2><p class=\"para\">In the project root, create a <code>tailwind.config.js</code> file.  Here is an example of a vanilla config file")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = CodeBlock(Clipboard, `/** @type {import('tailwindcss').Config} */
module.exports = {
  content: ["./internal/ui/**/*.templ"],
  darkMode: "class",
  theme: {
    extend: {
      zIndex: {
        toast: 100,
      },
      keyframes: {
        zoomOut: {
          "0%": { transform: "scale(1)" },
          "100%": { transform: "scale(0.5)" },
        },
        bounceInDown: {
          "0%": { opacity: "0", transform: "translate3d(0, -3000px, 0)" },
          "60%": { opacity: "1", transform: "translate3d(0, 25px, 0)" },
          "75%": { transform: "translate3d(0, -10px, 0)" },
          "90%": { transform: "translate3d(0, 5px, 0)" },
          "100%": { transform: "none" },
        },
      },
    },
  },
  plugins: [],
};
`).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</p><h2 class=\"mt-2 text-2xl font-extrabold\">style.css</h2><p class=\"para\">Create a <code>style.css</code> file with the content below.  We recommend creating it in <code>/internal/ui</code>. You can add your custom styles it this file.")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = CodeBlock(Clipboard, `@tailwind base;
@tailwind components;
@tailwind utilities;
`).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</p><h2 class=\"mt-2 text-2xl font-extrabold\">Updating the build script</h2><p class=\"para\">Edit the <code>/scripts/air_build.sh</code> to include tailwind and build the style.css for the site. Include it as below")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = CodeBlock(Clipboard, `#!/usr/bin/env bash

set -e
set -u
set -o pipefail
set -x

npx -y tailwindcss -i ./internal/ui/styles.css -o ./internal/server/assets/css/styles.css --minify
templ generate
go build -o ./tmp/main cmd/server/main.go
`).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</p><h2 class=\"mt-2 text-2xl font-extrabold\">Updating the Dockerfile</h2><p class=\"para\">Edit the <code>/Dockerfile</code> to include tailwind and build the style.css for the site. Include it as below")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = CodeBlock(Clipboard, `FROM golang:latest AS build

WORKDIR /go/src/app
COPY . .

RUN go install github.com/a-h/templ/cmd/templ@latest
RUN apt update && apt install npm -y
RUN npm install -D tailwindcss
RUN npx tailwindcss -i ./internal/ui/styles.css -o ./internal/server/assets/css/styles.css && templ generate

RUN go mod download
RUN CGO_ENABLED=0 go build -o /go/bin/app cmd/server/main.go

FROM gcr.io/distroless/static-debian12:latest

COPY --from=build /go/bin/app /
EXPOSE 8080
CMD ["/app"]
`).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</p></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
