// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.819
package prereqs

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import . "github.com/gofs-cli/website/internal/ui/components"

func Prereqs() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"flex flex-col gap-y-2\"><h1 class=\"mb-4 text-4xl font-extrabold\">Prerequisites</h1><h2 class=\"mt-2 text-2xl font-extrabold\">Familiarity with Go</h2><p class=\"para\">You should have some experience with Go. There are some good tutorials <a class=\"link\" href=\"https://go.dev/doc/tutorial/getting-started\">here</a> and <a class=\"link\" href=\"https://tour.golang.org/welcome/1\">here</a> which you can use to get started if you are new to Go. These docs assume you are familiar with Go.</p><h2 class=\"mt-2 text-2xl font-extrabold\">Go toolchain</h2><p class=\"para\"><a class=\"link\" href=\"https://go.dev/dl/\">Download go</a> for your OS and install it. The official instructions are <a class=\"link\" href=\"https://go.dev/doc/install\">here</a>.</p><p class=\"para mt-4\">If you are using Windows, the installer should setup the path for you. Ensure that `go` is on your path, you should be able to type the command below in `terminal` or `cmd/powershell` and see the installed go version.")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Cmdline("go version").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</p><p class=\"para mt-4\">Once go is installed, you can add the GOPATH to your system path. GOPATH is where go will install any tools installed using `go install`, This is typically your `$HOME/go/bin`, this should be added to your system PATH to allow you to run installed tools.</p><h2 class=\"mt-2 text-2xl font-extrabold\">Gofs cli</h2><p class=\"para\">Once go is installed, you can install the gofs cli by running:")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Cmdline("go install github.com/gofs-cli/gofs@latest").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</p><h2 class=\"mt-2 text-2xl font-extrabold\">Make</h2><p class=\"para\">The Gofs template includes a Makefile for convenience.   To check if you have make installed, run")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Cmdline("make --version").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "If you dont see a make version printed then you will need to install it with the instructions for your OS below.<h3 class=\"mt-2 text-xl font-bold\">MacOS</h3>On MacOS make comes with Xcode command line tools. Run this command in a terminal to install it")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Cmdline("xcode-select --install").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<h3 class=\"mt-2 text-xl font-bold\">Linux</h3>On Linux you can install it with or equivalent for your distro")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Cmdline("sudo apt-get install make").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<h3 class=\"mt-2 text-xl font-bold\">Windows</h3>On Windows you will need to install a make tool such as  <a class=\"link\" href=\"https://www.gnu.org/software/make/\">GNU Make</a></p></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
