package blogs

templ Libraries() {
	<div class="flex flex-col gap-y-2 md:w-1/2">
		<img class="h-96 w-full rounded-lg object-cover md:h-auto md:rounded-none" src="/assets/img/blogs/libraries.jpg" alt=""/>
		<h1 class="mb-4 text-4xl font-extrabold">Libraries vs. Frameworks</h1>
		<p class="para">
			Software libraries empower experienced developers to pick and choose components that 
			align with their vision, enabling them to craft solutions tailored to their unique 
			requirements. This flexibility allows for more creativity which leads to better code 
			and happier developers.
		</p>
		<p class="para">
			In contrast, frameworks, while streamlining development and providing conventions, 
			restricts a developers ability to create and be expressive. The guardrails built into 
			frameworks can prevent developers from writing code they way they want. Trying to do 
			something in a framework that it doesn't cater for, can lead a developer to spend days 
			searching the corners of the Internet for people who have tried to it and failed, 
			and then spending days decompiling framework code to figure out how things are wired 
			in order to get a simple deliverable done the way they want.
		</p>
		<h2 class="text-2xl font-extrabold">Skilful developers prefer libraries</h2>
		<p class="para">
			It is not uncommon to struggle to find talented young software engineers who are 
			prepared to work in these frameworks for example .Net and Java Spring. Some organisations 
			are trapped in these ecosystems and will keep going with an ever ageing talent pool, 
			while others switch away from these frameworks and benefit from highly skilled 
			developers that prefer to work with libraries.
		</p>
		<p class="para">
			We are unashamedly developer centered. We love working in well crafted codebases written 
			by skillful developers who take pride in their craft and their code - these codebases are 
			easy to extend and debug. Conversely we have experienced the drag of working in poorly 
			written codebases created by commodity developers. Commodity developers may be cheaper 
			per day, but they take many times longer to write anything so their overall cost is higher, 
			but also the code they write is a drag on all future developers who need to work on that 
			codebase. Cheap commodity developers are a false economy.
		</p>
	</div>
}
